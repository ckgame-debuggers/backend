# ===========================================
# Debuggers Backend Environment Configuration
# ===========================================
# Copy this file to .env and fill in your actual values

# ===========================================
# Application Configuration
# ===========================================
NODE_ENV=development
PORT=8080
FRONT_URL=http://localhost:3000

# ===========================================
# JWT Configuration
# ===========================================
# JWT secret key (generate a strong secret)
JWT_SECRET=your-super-secret-jwt-key-here
# JWT access token expiration (string format: 7d, 2h, 30m, etc.)
JWT_ACCESS_EXPIRES_IN=7d
# JWT refresh token expiration (string format: 30d, 1w, etc.)
JWT_REFRESH_EXPIRATION_TIME=30d
# JWT refresh secret (optional, uses JWT_SECRET if not set)
JWT_REFRESH_SECRET=your-refresh-secret-key-here

# ===========================================
# Database Configuration
# ===========================================
# Database host URL
DATABASE_URL=localhost
# Database port number
DATABASE_PORT=5432
# Database name
DATABASE_NAME=debuggers_db
# Database username
DATABASE_USER=postgres
# Database password
DATABASE_PASSWORD=your-database-password

# ===========================================
# Mail Configuration (SMTP)
# ===========================================
# SMTP host server
MAIL_HOST=smtp.gmail.com
# SMTP port number
MAIL_PORT=587
# SMTP username (usually your email)
MAIL_USER=your-email@gmail.com
# SMTP password (use app password for Gmail)
MAIL_PASS=your-app-password
# SMTP from email address
MAIL_FROM=your-email@gmail.com

# ===========================================
# Optional Configuration
# ===========================================
# Portone API Secret (for payment processing)
PORTONE_API_SECRET=your-portone-api-secret

# ===========================================
# Development Notes
# ===========================================
# 1. For Gmail, you need to use an App Password, not your regular password
# 2. Generate a strong JWT_SECRET (you can use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))")
# 3. Make sure your database is running and accessible
# 4. Update FRONT_URL to match your frontend application URL 